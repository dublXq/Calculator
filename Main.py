import BackendMath

BM = BackendMath.BackendMath()

def formated_user(a, b, c):
    if c == "1":
        print(f"–°—É–º–º–∞ –¥–≤—É—Ö —á–∏—Å–µ–ª {a} –∏ {b} —Ä–∞–≤–Ω–∞ = {BM.add(int(a),int( b))}")
    elif c == "2":
        print(f"–í—ã—á–∏—Ç–∞–Ω–∏–µ –¥–≤—É—Ö —á–∏—Å–µ–ª {a} –∏ {b} —Ä–∞–≤–Ω–∞ = {BM.subtract(int(a),int(b))}")
    elif c == "3":
        print(f"–£–º–Ω–æ–∂–µ–Ω–∏–µ –¥–≤—É—Ö —á–∏—Å–µ–ª {a} –∏ {b} —Ä–∞–≤–Ω–∞ = {BM.multiply(int(a),int( b))}")
    elif c == "4":
       print(f"–î–µ–ª–µ–Ω–∏–µ –¥–≤—É—Ö —á–∏—Å–µ–ª {a} –∏ {b} —Ä–∞–≤–Ω–∞ = {BM.divide(int(a),int(b))}")


class Main:
    if __name__ == '__main__':

        print(
            "\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ.(üëâÔæü„ÉÆÔæü)üëâ)\n\n–Ø –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –ø–æ—Å—á–∏—Ç–∞—Ç—å –ª—é–±–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.\n"
            "\n–Ø —É–º–µ—é:\n1. –°–ª–∞–∂–∏–≤–∞—Ç—å —á–∏—Å–ª–∞\n"
            "2. –í—ã—á–∏—Ç–∞—Ç—å —á–∏—Å–ª–∞\n"
            "3. –£–º–Ω–æ–∂–∞—Ç—å —á–∏—Å–ª–∞\n"
            "4. –î–µ–ª–∏—Ç—å —á–∏—Å–ª–∞\n"
            "\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É -> 1. –î–ª—è –≤—ã—Ö–æ–¥–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É -> 2.\n\n–°–æ–∑–¥–∞—Ç–µ–ª—å --> https://github.com/dublXq\n")

        while True:
            val = input("1. –ù–∞—á–∞—Ç—å\n2. –í—ã—Ö–æ–¥\n–í–≤–æ–¥: ")
            if val == "1":
                a = input("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: ")
                b = input("–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: ")
                c = input("–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n"
                          "1. –°–ª–æ–∂–µ–Ω–∏–µ (+)\n"
                          "2. –í—ã—á–∏—Ç–∞–Ω–∏–µ (-)\n"
                          "3. –£–º–Ω–æ–∂–µ–Ω–∏–µ(*)\n"
                          "4. –î–µ–ª–µ–Ω–∏–µ(/)\n"
                          "–í–≤–æ–¥: ")
                if a.isdigit() and b.isdigit() and c.isdigit():
                    formated_user(a, b, c)
                    break
                else:
                    print("–í—ã –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É")
            elif val == "2":
                break
            else:
                print("–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –µ—â–µ —Ä–∞–∑ :) ")
